---
export interface Props {
  config: any;
}

const { config } = Astro.props;

// Transform menu data to match restaurant template format
const menu = Object.entries(config.menu || {}).map(([key, items]) => ({
  category: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1').trim(),
  description: getMenuDescription(key),
  items: Array.isArray(items) ? items : []
}));

function getMenuDescription(category) {
  const descriptions = {
    appetizers: 'Start your meal with our delicious appetizers',
    tacos: 'Authentic tacos made with fresh ingredients',
    burritos: 'Large flour tortillas filled with your favorite ingredients',
    fajitasPlatters: 'Sizzling platters served with rice, beans, and tortillas',
    desserts: 'Sweet endings to your meal',
    signatureSpuds: 'Our famous loaded potato creations',
    loadATaco: 'Fresh tacos made to order',
    loadASalad: 'Garden fresh salads with premium toppings',
    beverages: 'Refreshing drinks to complement your meal',
    snacks: 'Perfect bites and treats'
  };
  return descriptions[category] || 'Delicious options made fresh daily';
}

const restaurantInfo = {
  name: config.businessName,
  location: `${config.address.city}, ${config.address.state}`,
  phone: config.phone,
  email: config.restaurantInfo?.email || `info@${config.businessName.toLowerCase().replace(/\s/g, '')}.com`,
  address: config.restaurantInfo?.realAddress || `${config.address.street}, ${config.address.city}, ${config.address.state} ${config.address.zip}`,
  hours: config.hours ? Object.fromEntries(
    config.hours.map((hour, index) => {
      const days = ['Mon-Thu', 'Fri-Sat', 'Sunday'];
      return [days[Math.floor(index / 2)] || 'Daily', hour.split(': ')[1]];
    })
  ) : {
    "Mon-Thu": "11:00 AM - 9:00 PM",
    "Fri-Sat": "11:00 AM - 10:00 PM", 
    "Sunday": "12:00 PM - 8:00 PM"
  }
};

// Theme colors
const theme = config.theme || {};
const primaryColor = theme.primaryColor || '#16A34A';
const secondaryColor = theme.secondaryColor || '#EF4444';
const accentColor = theme.accentColor || '#FBBF24';
---

<div class="restaurant-layout">
  <!-- Hero Section with Character/Mascot -->
  <header class="relative text-white py-12 lg:py-20 overflow-hidden" 
          style={`background: linear-gradient(135deg, ${theme.primaryColor || '#16A34A'} 0%, ${theme.secondaryColor || '#EF4444'} 50%, ${theme.primaryColor || '#16A34A'} 100%)`}>
    <!-- Background pattern -->
    <div class="absolute inset-0 opacity-20">
      <div class="absolute inset-0" 
           style={`background: linear-gradient(90deg, ${theme.primaryColor}20, ${theme.secondaryColor}20, ${theme.primaryColor}20)`}></div>
    </div>
    
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
      <div class="text-center">
        <!-- Logo Section with Character -->
        <div class="flex justify-center items-center mb-8 relative">
          <!-- Main Business Name with Gradient Effect -->
          <div class="relative">
            <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold font-display tracking-wider mb-4"
                style={`background: linear-gradient(90deg, ${theme.accentColor}, ${theme.secondaryColor}, ${theme.accentColor}); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;`}>
              {config.businessName.split(' ')[0].toUpperCase()}
            </h1>
            <p class="text-lg sm:text-xl md:text-2xl font-semibold tracking-widest opacity-90">
              {config.businessType.toUpperCase()}
            </p>
          </div>
          
          <!-- Mascot Character (if enabled) -->
          {config.components?.branding?.mascot && (
            <div class="hidden lg:block absolute -right-16 xl:-right-20 top-1/2 transform -translate-y-1/2">
              <div class="relative animate-bounce opacity-90">
                {config.components.branding.mascot.type === 'chili-pepper' && (
                  <div class="scale-75 xl:scale-90">
                    <!-- Sombrero -->
                    <div class="w-12 h-12 xl:w-14 xl:h-14 bg-gradient-to-b from-yellow-600 to-yellow-800 rounded-full relative mb-1">
                      <div class="absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-1 w-10 h-4 xl:w-12 xl:h-5 bg-gradient-to-r from-red-500 via-green-500 to-red-500 rounded-t-full"></div>
                    </div>
                    
                    <!-- Chili Body -->
                    <div class="w-8 h-16 xl:w-10 xl:h-18 bg-gradient-to-b from-red-500 to-red-700 rounded-full relative mx-auto">
                      <!-- Eyes -->
                      <div class="absolute top-2 left-1.5 w-1.5 h-1.5 bg-white rounded-full"></div>
                      <div class="absolute top-2 right-1.5 w-1.5 h-1.5 bg-white rounded-full"></div>
                      <!-- Mustache -->
                      <div class="absolute top-4 left-1/2 transform -translate-x-1/2 w-4 h-0.5 bg-black rounded-full"></div>
                      <!-- Thumbs up hand -->
                      <div class="absolute -left-3 top-6 w-3 h-4 bg-white rounded-full rotate-12">
                        <div class="absolute top-0 left-1/2 w-1 h-2 bg-white rounded-full transform -translate-x-1/2 -translate-y-0.5"></div>
                      </div>
                    </div>
                  </div>
                )}
                
                {config.components?.branding?.emoji && !config.components?.branding?.comfort && (
                  <div class="text-4xl xl:text-5xl animate-bounce">
                    {config.components.branding.emoji}
                  </div>
                )}
                
                {config.components?.branding?.comfort && (
                  <div class="relative scale-75 xl:scale-90">
                    <!-- Potato mascot for comfort food establishments -->
                    <div class="w-12 h-16 xl:w-14 xl:h-18 bg-gradient-to-b from-yellow-600 to-yellow-800 rounded-full relative mx-auto animate-bounce">
                      <!-- Eyes -->
                      <div class="absolute top-3 left-2 w-1.5 h-1.5 bg-white rounded-full"></div>
                      <div class="absolute top-3 right-2 w-1.5 h-1.5 bg-white rounded-full"></div>
                      <!-- Smile -->
                      <div class="absolute top-5 left-1/2 transform -translate-x-1/2 w-4 h-2 border-b-2 border-white rounded-full"></div>
                      <!-- Chef hat -->
                      <div class="absolute -top-1 left-1/2 transform -translate-x-1/2 w-8 h-4 bg-white rounded-t-full"></div>
                      <div class="absolute -top-2 left-1/2 transform -translate-x-1/2 w-6 h-3 bg-white rounded-full"></div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>
        
        <p class="text-xl sm:text-2xl mb-8 opacity-85 flex items-center justify-center gap-2">
          <svg class="w-6 h-6 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
          </svg>
          {restaurantInfo.location}
        </p>
        
        <div class="flex flex-col sm:flex-row gap-6 justify-center items-center mb-8">
          <div class="flex items-center gap-3 text-lg backdrop-blur-sm rounded-full px-6 py-3 border border-white/20" 
               style={`background: ${theme.primaryColor}30; border-color: ${theme.primaryColor}20;`}>
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" style={`color: ${theme.accentColor};`}>
              <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
            </svg>
            <span class="font-semibold">{restaurantInfo.phone}</span>
          </div>
          <div class="flex items-center gap-3 text-lg backdrop-blur-sm rounded-full px-6 py-3 border border-white/20" 
               style={`background: ${theme.secondaryColor}30; border-color: ${theme.secondaryColor}20;`}>
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" style={`color: ${theme.accentColor};`}>
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
            </svg>
            <span class="font-semibold">4.8★ Reviews</span>
          </div>
        </div>
      </div>
    </div>
  </header>

  <!-- Quick Info Bar -->
  <div class="text-white py-4" 
       style={`background: linear-gradient(90deg, ${theme.primaryColor}, ${theme.secondaryColor});`}>
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex flex-wrap justify-center items-center gap-6 text-center">
        <div class="flex items-center gap-2">
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" style={`color: ${theme.accentColor};`}>
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"></path>
          </svg>
          <div>
            <div class="font-semibold">Open Today</div>
            <div class="text-sm opacity-90">{Object.values(restaurantInfo.hours)[0]}</div>
          </div>
        </div>
        <div class="px-6 py-2 rounded-full font-bold text-lg flex items-center gap-2" 
             style={`background: ${theme.accentColor}; color: ${theme.primaryColor};`}>
          <span class="text-xl">{config.components?.branding?.emoji || '🍽️'}</span>
          <span>{config.components?.branding?.culturalTheme === 'mexican' ? 'Auténtico Mexicano' : 
                 config.components?.branding?.comfort ? 'Fresh Comfort Food' : 'Premium Quality'}</span>
        </div>
        <div class="text-center">
          <div class="font-semibold">Fresh Daily</div>
          <div class="text-sm opacity-90">Made from scratch</div>
        </div>
      </div>
    </div>
  </div>

  <!-- Menu Search (if enabled) -->
  {config.components?.branding?.search && (
    <div class="bg-gray-800/90 backdrop-blur-sm shadow-lg border-b border-gray-700">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-4">
        <div class="flex items-center justify-center gap-4">
          <svg class="w-5 h-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
          </svg>
          <input 
            type="text" 
            placeholder="Buscar en nuestro menú..." 
            class="flex-1 max-w-md px-4 py-2 bg-gray-700 border-2 border-red-500/50 rounded-full focus:outline-none focus:border-green-400 transition-colors text-white placeholder-gray-400"
            id="menuSearch"
          />
        </div>
      </div>
    </div>
  )}

  <!-- Menu Section -->
  <main class="container mx-auto px-4 sm:px-6 lg:px-8 py-12 bg-gray-900">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold mb-4" style={`color: ${theme.primaryColor};`}>
        {config.components?.branding?.culturalTheme === 'mexican' ? 'Nuestro Menú' : 'Our Menu'}
      </h2>
      <p class="text-xl text-gray-300 max-w-2xl mx-auto">
        {config.description}
      </p>
    </div>

    <div class="space-y-16">
      {menu.map((section) => (
        <section class="menu-section">
          <div class="text-center mb-8">
            <h3 class="text-2xl md:text-3xl font-bold mb-2 border-b-4 inline-block pb-2" 
                style={`color: ${theme.primaryColor}; border-color: ${theme.secondaryColor};`}>
              {section.category}
            </h3>
            <p class="text-gray-300 mt-4 text-lg">{section.description}</p>
          </div>
          
          <div class="grid gap-4 lg:gap-6 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3">
            {section.items.map((item) => (
              <div class="menu-item bg-gray-800/80 backdrop-blur-sm rounded-xl p-4 shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-300 border-l-4 group relative overflow-hidden"
                   style={`border-color: ${theme.secondaryColor};`}
                   onmouseover={`this.style.borderColor='${theme.primaryColor}'`}
                   onmouseout={`this.style.borderColor='${theme.secondaryColor}'`}>
                <div class="absolute top-0 right-0 w-20 h-20 rounded-bl-full transform translate-x-6 -translate-y-6 group-hover:scale-110 transition-transform duration-300"
                     style={`background: linear-gradient(135deg, ${theme.accentColor}20, ${theme.secondaryColor}20);`}></div>
                <div class="relative z-10">
                  <div class="flex flex-col sm:flex-row justify-between items-start mb-4 gap-2">
                    <h4 class="font-bold text-lg text-white transition-colors flex-1 pr-2 leading-tight" 
                        style={`&:hover { color: ${theme.primaryColor}; }`}>
                      {config.components?.branding?.numberedItems && item.number ? `${item.number}. ${item.name}` : item.name}
                    </h4>
                    <span class="text-lg font-bold text-white px-3 py-1 rounded-lg shadow-md group-hover:scale-105 transition-transform duration-300"
                          style={`background: linear-gradient(90deg, ${theme.primaryColor}, ${theme.secondaryColor});`}>
                      {item.price}
                    </span>
                  </div>
                  {item.description && (
                    <p class="text-gray-300 text-sm leading-relaxed group-hover:text-gray-200 transition-colors">
                      {item.description}
                    </p>
                  )}
                  <div class="mt-4 flex justify-between items-center">
                    <div class="flex gap-1">
                      {[...Array(5)].map((_, i) => (
                        <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                        </svg>
                      ))}
                    </div>
                    <button class="font-semibold text-sm transition-colors hidden sm:block"
                            style={`color: ${theme.primaryColor};`}
                            onmouseover={`this.style.color='${theme.secondaryColor}'`}
                            onmouseout={`this.style.color='${theme.primaryColor}'`}>
                      Agregar al Pedido →
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>
      ))}
    </div>
  </main>

  <!-- Call to Action Section -->
  <section class="text-white py-16 mt-16" 
           style={`background: linear-gradient(90deg, ${theme.primaryColor}, ${theme.secondaryColor});`}>
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="text-3xl md:text-4xl font-bold mb-6">
        {config.components?.branding?.culturalTheme === 'mexican' ? '¿Listo para Ordenar?' : 'Ready to Order?'}
      </h2>
      <p class="text-xl mb-8 opacity-90">
        {config.components?.branding?.culturalTheme === 'mexican' ? '¡Experimenta el sabor auténtico hoy!' : 
         config.components?.branding?.comfort ? 'Experience comfort food at its finest!' : 'Experience authentic flavors today!'}
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <button class="px-8 py-4 rounded-full font-bold text-lg transition-colors"
                style={`background: ${theme.accentColor}; color: ${theme.primaryColor};`}
                onmouseover={`this.style.background='${theme.accentColor}CC'`}
                onmouseout={`this.style.background='${theme.accentColor}'`}>
          {config.components?.branding?.culturalTheme === 'mexican' ? 'Ordenar en Línea' : 'Order Online'}
        </button>
        <button class="border-2 border-white text-white px-8 py-4 rounded-full font-bold text-lg transition-colors"
                onmouseover={`this.style.background='white'; this.style.color='${theme.primaryColor}';`}
                onmouseout={`this.style.background='transparent'; this.style.color='white';`}>
          {config.components?.branding?.culturalTheme === 'mexican' ? 'Llamar' : 'Call'} {restaurantInfo.phone}
        </button>
      </div>
    </div>
  </section>

  <!-- Hours & Location -->
  <section class="bg-gray-800/50 py-16">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid md:grid-cols-2 gap-12">
        <div class="text-center">
          <h3 class="text-2xl font-bold mb-4" style={`color: ${theme.primaryColor};`}>
            {config.components?.branding?.culturalTheme === 'mexican' ? 'Horarios' : 'Hours'}
          </h3>
          <div class="space-y-2">
            {Object.entries(restaurantInfo.hours).map(([days, hours]) => (
              <div class="flex justify-center items-center gap-3">
                <span class="font-semibold text-white w-20 text-left">{days}:</span>
                <span class="text-gray-300">{hours}</span>
              </div>
            ))}
          </div>
        </div>
        
        <div class="text-center">
          <h3 class="text-2xl font-bold mb-4" style={`color: ${theme.primaryColor};`}>
            {config.components?.branding?.culturalTheme === 'mexican' ? 'Visítanos' : 'Visit Us'}
          </h3>
          <div class="space-y-3">
            <div class="flex items-center justify-center gap-2">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" style={`color: ${theme.primaryColor};`}>
                <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
              </svg>
              <span class="text-white text-center">{restaurantInfo.address}</span>
            </div>
            <div class="flex items-center justify-center gap-2">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" style={`color: ${theme.primaryColor};`}>
                <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
              </svg>
              <span class="text-white">{restaurantInfo.phone}</span>
            </div>
            <div class="mt-4">
              <button class="text-white px-6 py-3 rounded-full font-bold transition-colors"
                      style={`background: ${theme.primaryColor};`}
                      onmouseover={`this.style.background='${theme.secondaryColor}'`}
                      onmouseout={`this.style.background='${theme.primaryColor}'`}>
                {config.components?.branding?.culturalTheme === 'mexican' ? 'Cómo Llegar' : 'Get Directions'}
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Footer -->
  <footer class="bg-gray-900 text-white py-12 border-t border-gray-700">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid md:grid-cols-3 gap-8">
        <div class="text-center md:text-left">
          <div class="flex items-center justify-center md:justify-start gap-2 mb-4">
            <svg class="w-8 h-8 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
              <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path>
            </svg>
            <h4 class="text-2xl font-bold">{config.businessName.split(' ')[0]}</h4>
          </div>
          <p class="text-gray-300">
            {config.description}
          </p>
        </div>
        
        <div class="text-center">
          <h4 class="text-xl font-bold mb-4">Enlaces Rápidos</h4>
          <div class="space-y-2">
            <a href="#menu" class="block text-gray-300 hover:text-white transition-colors">Menú</a>
            <a href="#hours" class="block text-gray-300 hover:text-white transition-colors">Horarios</a>
            <a href="#location" class="block text-gray-300 hover:text-white transition-colors">Ubicación</a>
            <a href="#contact" class="block text-gray-300 hover:text-white transition-colors">Contacto</a>
          </div>
        </div>
        
        <div class="text-center md:text-right">
          <h4 class="text-xl font-bold mb-4">Síguenos</h4>
          <p class="text-gray-300 mb-4">Para ofertas especiales y actualizaciones</p>
          <div class="flex justify-center md:justify-end gap-4">
            <button class="text-gray-300 hover:text-white transition-colors">Facebook</button>
            <button class="text-gray-300 hover:text-white transition-colors">Instagram</button>
            <button class="text-gray-300 hover:text-white transition-colors">Yelp</button>
          </div>
        </div>
      </div>
      
      <div class="border-t border-gray-600 mt-8 pt-8 text-center">
        <div class="flex flex-col md:flex-row justify-between items-center gap-4">
          <p class="text-gray-300">
            © {new Date().getFullYear()} {config.businessName}. Todos los derechos reservados.
          </p>
          <p class="text-sm text-gray-400">
            Sitio web por <a href="/info" class="text-cyan-400 hover:text-cyan-300 transition-colors font-semibold">Cozyartz Media Group</a>
          </p>
        </div>
      </div>
    </div>
  </footer>
</div>

<style define:vars={{
  restaurantPrimary: primaryColor,
  restaurantSecondary: secondaryColor,
  restaurantAccent: accentColor,
  restaurantFont: theme.fontFamily || 'Inter, sans-serif'
}}>
.restaurant-layout {
  --restaurant-primary: var(--restaurantPrimary);
  --restaurant-secondary: var(--restaurantSecondary);
  --restaurant-accent: var(--restaurantAccent);
  font-family: var(--restaurantFont, 'Inter'), sans-serif;
  background: linear-gradient(135deg, #1f2937 0%, #111827 100%);
  color: white;
  min-height: 100vh;
}

.font-display { 
  font-family: var(--restaurantFont, 'Fredoka'), sans-serif; 
}

.menu-item {
  transition: all 0.3s ease;
}

.menu-item:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.25);
}

/* Search functionality */
#menuSearch {
  background: rgba(31, 41, 55, 0.8);
}

#menuSearch:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(var(--restaurant-primary), 0.2);
}

/* Responsive design */
@media (max-width: 768px) {
  .container {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}
</style>

<script>
// Menu search functionality
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('menuSearch');
  const menuItems = document.querySelectorAll('.menu-item');
  const menuSections = document.querySelectorAll('.menu-section');

  searchInput?.addEventListener('input', function(e) {
    const searchTerm = e.target.value.toLowerCase();
    
    menuItems.forEach(item => {
      const itemName = item.querySelector('h4')?.textContent?.toLowerCase() || '';
      const itemDescription = item.querySelector('p')?.textContent?.toLowerCase() || '';
      
      if (itemName.includes(searchTerm) || itemDescription.includes(searchTerm)) {
        item.style.display = 'block';
      } else {
        item.style.display = 'none';
      }
    });

    // Hide empty sections
    menuSections.forEach(section => {
      const visibleItems = section.querySelectorAll('.menu-item[style="display: block"], .menu-item:not([style*="display: none"])');
      if (visibleItems.length === 0 && searchTerm !== '') {
        section.style.display = 'none';
      } else {
        section.style.display = 'block';
      }
    });
  });
});
</script>